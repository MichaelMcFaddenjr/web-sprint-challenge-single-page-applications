{"version":3,"sources":["components/Header.js","components/Form.js","validation/formSchema.js","App.js","index.js"],"names":["ButtonWrapper","styled","button","Header","className","to","FormWrapper","div","Form","props","values","submit","change","errors","disabled","onChange","event","target","name","value","type","checked","onSubmit","preventDefault","size","email","peppers","onions","pepperoni","olives","specialInstructions","Yup","shape","required","min","initialFormValues","initialErrorValues","initialOrders","HeaderWrapper","header","App","useState","formValues","setFormValues","errorValues","setErrorValues","setDisabled","pizzaOrder","setPizzaOrder","useEffect","schema","isValid","then","valid","exact","path","map","order","key","yup","validate","catch","err","newPizza","axios","post","res","console","log","data","postPizzaOrder","trim","toppings","filter","topping","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60089618.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components';\n\nconst ButtonWrapper = styled.button`\nbackground-color: mistyrose;\nborder: 1px solid blue;\nmargin: 1rem;\npadding: 0.5rem;\n`\n\nexport default function Header() {\n    return (\n        <header>\n            <h1> Lambda Eats </h1>\n            <ButtonWrapper><Link className=\"home-button\" to=\"/\">Home</Link></ButtonWrapper>\n            <ButtonWrapper><Link className=\"form-button\" to=\"/pizza\">Order Pizza</Link></ButtonWrapper>\n        </header>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst FormWrapper = styled.div`\ntext-align: center;\n`\n\nexport default function Form(props) {\n    const {\n        values,\n        submit,\n        change,\n        errors,\n        disabled\n    } = props\n\n    const onSubmit = event => {\n        event.preventDefault()\n        submit()\n    }\n\n    const onChange = event => {\n        const { name, value, type, checked } = event.target\n        const valueToUse = type === \"checkbox\" ? checked : value;\n        change(name, valueToUse)\n    }\n\n    return (\n        <FormWrapper>\n        <div className=\"form\">\n            <form onSubmit={onSubmit}>\n                <h1> Build a Pizza! </h1>\n                <button className= \"submit\" disabled={disabled}> Submit Your Order </button>\n\n                <div className=\"errors\">\n                    <div className=\"error\">{errors.name}</div>\n                    <div className=\"error\">{errors.size}</div>\n                    <div className=\"error\">{errors.email}</div>\n                </div>\n\n                <h2> Your Order Details </h2>\n\n                <label className=\"label\"> Name\n                    <input\n                    type=\"text\"\n                    onChange={onChange}\n                    name=\"name\"\n                    value={values.name}\n                    />\n                </label>\n\n                <label className=\"label\"> Email\n                    <input\n                    type=\"email\"\n                    onChange={onChange}\n                    name=\"email\"\n                    value={values.email}\n                    />\n                </label>\n\n                <h4> Choice of Size (required) </h4>\n\n                <label> Pick Size\n                    <select onChange={onChange}\n                    value={values.size}\n                    name=\"size\"\n                    className=\"size\"\n                    >\n                        <option value=\"\"> -----CHOOSE SIZE----- </option>\n                        <option value=\"small\"> Snack (6\" Diameter)</option>\n                        <option value=\"medium\"> Hungry (9\" Diameter)</option>\n                        <option value=\"large\"> Starving (12\" Diameter)</option>\n                        <option value=\"extralarge\"> Famished (18\" Diameter)</option>\n                    </select>\n\n                </label>\n\n                <h4> Any Toppings? (optional) </h4>\n                <label> Peppers\n                    <input \n                    type=\"checkbox\"\n                    onChange={onChange}\n                    name=\"peppers\"\n                    checked={values.peppers}\n                    />\n                </label>\n                <label> Onions\n                    <input \n                    type=\"checkbox\"\n                    onChange={onChange}\n                    name=\"onions\"\n                    checked={values.onions}\n                    />\n                </label>\n                <label> Pepperoni\n                    <input \n                    type=\"checkbox\"\n                    onChange={onChange}\n                    name=\"pepperoni\"\n                    checked={values.pepperoni}\n                    />\n                </label>\n                <label> Olives\n                    <input \n                    type=\"checkbox\"\n                    onChange={onChange}\n                    name=\"olives\"\n                    checked={values.olives}\n                    />\n                </label>\n\n                <h4> Special Instructions? </h4>\n                <p> Write 'em below, maestro. </p>\n                <label className=\"label\"> Special Instructions\n                    <input\n                    type=\"text\"\n                    onChange={onChange}\n                    name=\"specialInstructions\"\n                    value={values.specialInstructions}\n                    />\n                </label>\n\n            </form>\n        </div>\n        </FormWrapper>\n    )\n}","import * as Yup from \"yup\";\n\nexport default Yup.object().shape({\n    name: Yup\n    .string()\n    .required(\"Name is required\")\n    .min(2, \"Name must be at least 2 characters long\"),\n    email: Yup\n    .string()\n    .email(\"must be a valid email\")\n    .required(\"email is required\"),\n    size: Yup\n    .string()\n    .required(\"Size is required\"),\n    peppers: Yup.boolean(),\n    onions: Yup.boolean(),\n    olives: Yup.boolean(),\n    pepperoni: Yup.boolean(),\n    specialInstructions: Yup.string()\n})","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {Switch, Route} from \"react-router-dom\";\nimport Header from \"./components/Header\"\nimport Form from \"./components/Form\"\nimport schema from \"./validation/formSchema\"\nimport styled from \"styled-components\"\nimport * as yup from \"yup\"\n\nconst apiLink = \"https://reqres.in/\";\n\nconst initialFormValues = {\n  name: \"\",\n  email: \"\",\n  size: \"\",\n  peppers: false,\n  onions: false,\n  pepperoni: false,\n  olives: false,\n  specialInstructions: \"\"\n}\n\nconst initialErrorValues = {\n  name: \"\",\n  email: \"\",\n  size: \"\"\n};\n\nconst initialOrders = []\n\nconst initialDisabled = true\n\nconst HeaderWrapper = styled.header`\ntext-align: center;\nborder: 2px solid gold;\n`\n\n\nconst App = () => {\n  const [ formValues, setFormValues ] = useState(initialFormValues)\n  const [ errorValues, setErrorValues ] = useState(initialErrorValues)\n  const [ disabled, setDisabled ] = useState(initialDisabled)\n  const [pizzaOrder, setPizzaOrder] = useState(initialOrders)\n\n  const inputChange = (name, value) => {\n    yup\n    .reach(schema, name)\n    .validate(value)\n    .then(() => {\n      setErrorValues({\n        ...errorValues,\n        [name]: \"\",\n      })\n    })\n    .catch(err => {\n      setErrorValues({\n        ...errorValues,\n        [name]: err.errors[0],\n      })\n    })\n\n    setFormValues({\n      ...formValues,\n      [name]: value \n    })\n  }\n\n  const postPizzaOrder = (newPizza) => {\n    axios\n    .post(apiLink, newPizza)\n    .then((res) => {\n      console.log(res.data)\n      setPizzaOrder([res.data, ...pizzaOrder])\n\n    }).catch((err) => {\n      console.log(err)\n    })\n\n    setFormValues(initialFormValues)\n    //should post newPizza to server with axios, and returns a database record.\n  }\n\n  const formSubmit = () => {\n    const newPizza={\n      name: formValues.name.trim(),\n      email: formValues.email.trim(),\n      size: formValues.size.trim(),\n      toppings: ['peppers', 'onions', 'pepperoni', 'olives'].filter((topping) => formValues[topping]\n      ),\n      specialInstructions: formValues.specialInstructions.trim()\n    }\n    postPizzaOrder(newPizza)\n  }\n\n  useEffect(() => {\n    // 🔥 STEP 9- ADJUST THE STATUS OF `disabled` EVERY TIME `formValues` CHANGES\n    schema.isValid(formValues).then(valid => setDisabled((!valid)))\n  }, [formValues])\n\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <HeaderWrapper>\n            <Header />\n            <div>\n              {pizzaOrder.map((order) => {\n                return <p key=\"order.specialInstructions\"> \n                Pizza ordered by {order.name}, confirmation sent to {order.email}. Special instructions: {order.specialInstructions}\n                </p>\n              })}\n            </div>\n          </HeaderWrapper>\n        </Route>\n        <Route exact path=\"/pizza\">\n          <HeaderWrapper>\n            <Header />\n          </HeaderWrapper>\n          <Form values={formValues} errors={errorValues} disabled={disabled} change={inputChange} submit={formSubmit}/>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, document.getElementById(\"root\"));"],"sourceRoot":""}